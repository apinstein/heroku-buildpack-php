#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
#
# Offical Docs: https://devcenter.heroku.com/articles/buildpack-api
#
# The "compile" stage allows your buildpack to prepare the slug for deployment.
# Before bin/compile is run, Heroku creates BUILD_DIR and your git repo's code is extracted there.
# After bin/compile exits, Heroku will package the contents of BUILD_DIR into the slug, and on deployment
# Heroku essentially runs cp -r BUILD_DIR/* /app/
#
# ASSUMPTIONS:
# 1. /app/www/config/httpd.conf will exist and contain a valid VirtualHost directive for your app.
# 2. Directory structure (created by this buildpack)
#    /app/www                                   <=== Your code
#    /app/shared/
#                log/
#                runtime/
# 3. Supported Heroku Configs
#    CONFIG_MAGIC_PROFILE - [optional] Profile name
#    PHP_FPM_CONF         - [optional] Location to a custom php-fpm.conf
#    PHP_INI              - [optional] Location to a custom php.ini

# fail fast
set -e
trap 'echo "Last command: $BASH_COMMAND"' ERR
indent() {
    sed -e 's/^/       /'
}

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

trim() {
    local var=$1
    var="${var#"${var%%[![:space:]]*}"}"   # remove leading whitespace characters
    var="${var%"${var##*[![:space:]]}"}"   # remove trailing whitespace characters
    echo -n "$var"
}

function cached_download() {
    url=$1
    extractLocation=$2
    [[ $url == '' || $extractLocation == '' ]] && echo "Usage: cached_download(url, extract_dir) where extract_dir is relative to BUILD_DIR" && exit 1
    if [[ ${extractLocation:0:1} != "/" ]]; then
        extractLocation=${BUILD_DIR}/${extractLocation}
    fi

    filename=`basename ${url}`
    tgzFile=${CACHE_DIR}/${filename}

    etagFile=${tgzFile}.etag
    if [[ -f ${etagFile} ]]; then
        cacheEtag=$(cat ${etagFile})
    else
        cacheEtag=notcached
    fi
    urlEtag=$(curl --silent -I ${url} | awk 'BEGIN {FS=": "}/^ETag/{print $2}')

    cacheEtag=$(trim ${cacheEtag})
    urlEtag=$(trim ${urlEtag})

    [[ ! -f ${tgzFile} || ! -f ${etagFile} || "${urlEtag}" != "${cacheEtag}" ]] && (echo "Downloading ${filename}" | indent) && curl --silent --max-time 60 --location "${url}" > "${tgzFile}"
    echo $urlEtag > ${etagFile}

    mkdir -p ${extractLocation}
    tar -C ${extractLocation} -zxf "${CACHE_DIR}/${filename}"
}

echo "-----> Compiling app: contents of BUILD_DIR ${BUILD_DIR} will be deployed as /app"

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move the git repo from /app to /app/www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .
# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

echo "-----> Installing buildpack binaries into /app/vendor"
VENDOR_DIR=vendor
mkdir -p ${VENDOR_DIR}

echo "Bundling Apache (worker/fastcgi) version $APACHE_VERSION" | indent
APACHE_VERSION="2.2.23"
APACHE_PATH="${VENDOR_DIR}/apache"
MOD_FASTCGI_VERSION="2.4.6"
PHP_VERSION="5.3.21"
PHP_PATH="${VENDOR_DIR}/php"

# discover php.ini and php-fpm.conf setups
BOOT_PHP_INI=${PHP_INI:-/app/${PHP_PATH}/php.ini}
BOOT_PHP_FPM_CONF=${PHP_FPM_CONF:-/app/${PHP_PATH}/php-fpm.conf}

mkdir -p ${APACHE_PATH}
APACHE_URL="http://util.cloud.tourbuzz.net.s3.amazonaws.com/heroku/builds/apache-${APACHE_VERSION}.tgz"
cached_download ${APACHE_URL} ${APACHE_PATH}
MOD_FASTCGI_URL="http://util.cloud.tourbuzz.net.s3.amazonaws.com/heroku/builds/mod_fastcgi-${MOD_FASTCGI_VERSION}.tgz"
cached_download ${MOD_FASTCGI_URL} ${APACHE_PATH}

mkdir -p ${APACHE_PATH}/conf.d
cp ${BUILDPACK_DIR}/support/httpd.conf ${APACHE_PATH}/conf/
cp ${BUILDPACK_DIR}/support/mod_fastcgi.conf ${APACHE_PATH}/conf.d/

echo "Bundling PHP FPM version $PHP_VERSION" | indent
PHP_URL="http://util.cloud.tourbuzz.net.s3.amazonaws.com/heroku/builds/php-${PHP_VERSION}.tgz"
mkdir -p ${PHP_PATH}
cached_download ${PHP_URL} ${PHP_PATH}

cp ${BUILDPACK_DIR}/support/php-fpm.conf ${BUILDPACK_DIR}/support/php.ini ${PHP_PATH}/
ln -s www $BUILD_DIR/www-fastcgi

echo "-----> Creating shared directories at /app/shared"
# create common directories for app to use
mkdir -p ${BUILD_DIR}/shared/{runtime,log}

# Preserve current php-fpm.conf so that env list does
# not go out of hand across restarts.
# From: https://github.com/iphoting/heroku-buildpack-php-tyler/blob/master/bin/compile
# NOT sure this is needed; commenting out for now
#if [ -r ${PHP_PATH}/php-fpm.conf.current ]; then
#  cp -f ${PHP_PATH}/php-fpm.conf.current ${PHP_PATH}/php-fpm.conf
#else
#  cp -f ${PHP_PATH}/etc/php-fpm.conf.default ${PHP_PATH}/php-fpm.conf
#fi

# check if we have Composer dependencies and vendors are not bundled
if [ -f www/composer.json ] && [ ! -d www/vendor ]; then
  echo "-----> Installing Composer dependencies"
  # we don't need svn on our slug... just need it on cache to help composer work during compile phase
  svn_dir=${CACHE_DIR}/svn
  export PATH=${svn_dir}/bin:$PATH
  cached_download http://util.cloud.tourbuzz.net.s3.amazonaws.com/heroku/builds/subversion-1.7.8.tgz ${svn_dir}

  GIT_DIR_ORIG=$GIT_DIR
  unset GIT_DIR
  cd www

  [[ -f ${CACHE_DIR}/composer-vendor.tgz ]] && tar -zxf ${CACHE_DIR}/composer-vendor.tgz
  COMPOSER_URL="http://getcomposer.org/composer.phar"
  [[ ! -f ${CACHE_DIR}/composer.phar ]] && curl --fail --silent --max-time 60 --location -o ${CACHE_DIR}/composer.phar "$COMPOSER_URL"
  ${BUILD_DIR}/${PHP_PATH}/bin/php ${CACHE_DIR}/composer.phar install --prefer-source | indent
  tar -zcf ${CACHE_DIR}/composer-vendor.tgz vendor

  cd ..
  export GIT_DIR=$GIT_DIR_ORIG
fi

if [ -n ${CONFIG_MAGIC_PROFILE} ]; then
  echo "-----> Config magic processing profile: ${CONFIG_MAGIC_PROFILE}"
  cd www
  ${BUILD_DIR}/${PHP_PATH}/bin/php vendor/bin/cfg ${CONFIG_MAGIC_PROFILE} | indent
  cd ..
fi

# this code needs info from this script, so it's easier to generate it inline here than copy an external template and munge values
cat >>boot.sh <<EOF
# This code runs on every dyno launch
export LD_LIBRARY_PATH=/app/lib:/app/vendor/apache/lib:$LD_LIBRARY_PATH
mkdir -p /app/vendor/var/log

echo "Launching php-fpm"
# Expose Heroku config vars to PHP-FPM processes
# From: https://github.com/iphoting/heroku-buildpack-php-tyler/blob/master/bin/compile
for var in \`env|cut -f1 -d=\`; do
  echo "env[\$var] = \${var}" >> ${BOOT_PHP_FPM_CONF}
done
/app/${PHP_PATH}/sbin/php-fpm -y ${BOOT_PHP_FPM_CONF} -c ${BOOT_PHP_INI}

echo "Launching apache"
tail -F /app/shared/log/error_log &
tail -F /app/shared/log/access_log &
tail -F /app/shared/log/php-fpm-error.log &
tail -F /app/vendor/apache/logs/error_log &
tail -F /app/vendor/apache/logs/access_log &
exec /app/vendor/apache/bin/httpd -d /app/vendor/apache -DNO_DETACH
EOF

chmod +x boot.sh
