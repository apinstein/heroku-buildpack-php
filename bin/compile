#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
#
# Offical Docs: https://devcenter.heroku.com/articles/buildpack-api
#
# The "compile" stage allows your buildpack to prepare the slug for deployment.
# Before bin/compile is run, Heroku creates BUILD_DIR and your git repo's code is extracted there.
# After bin/compile exits, Heroku will package the contents of BUILD_DIR into the slug, and on deployment
# Heroku essentially runs cp -r BUILD_DIR/* /app/

# fail fast
set -e
trap 'echo "Last command: $BASH_COMMAND"' ERR
indent() {
    sed -e 's/^/       /'
}

# can we get rid of this now that we have .profile.d? Not sure if that runs before bin/compile... I think it's only for the actual application..
# alternatively hopefully we can get rid of it once we get /app/vendor installation working properly?
export LD_LIBRARY_PATH=/app/lib:$LD_LIBRARY_PATH
export PATH=/app/bin:$PATH

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

echo "-----> Compiling app: contents of BUILD_DIR ${BUILD_DIR} will be deployed as /app"

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move the git repo from /app to /app/www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .
# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

echo "-----> Installing buildpack binaries into /app/vendor"
VENDOR_DIR=${BUILD_DIR}/vendor
mkdir -p ${VENDOR_DIR}

echo "Bundling Apache (worker/fastcgi) version $APACHE_VERSION" | indent
# config
APACHE_VERSION="2.2.23"
APACHE_PATH="${VENDOR_DIR}/apache"
MOD_FASTCGI_VERSION="2.4.6"
MOD_FASTCGI_PATH="${APACHE_PATH}/modules"
PHP_VERSION="5.3.21"
PHP_PATH="${VENDOR_DIR}/php"

APACHE_URL="http://util.cloud.tourbuzz.net.s3.amazonaws.com/heroku/builds/apache-${APACHE_VERSION}.tgz"
mkdir -p ${APACHE_PATH}
(curl --silent --max-time 60 --location "$APACHE_URL" || echo FAIL) | tar xz -C ${APACHE_PATH}
MOD_FASTCGI_URL="http://util.cloud.tourbuzz.net.s3.amazonaws.com/heroku/builds/mod_fastcgi-${MOD_FASTCGI_VERSION}.tgz"
mkdir -p ${MOD_FASTCGI_PATH}
(curl --silent --max-time 60 --location "$MOD_FASTCGI_URL" || echo FAIL) | tar xz -C ${MOD_FASTCGI_PATH}
cp ${BUILDPACK_DIR}/support/httpd.conf ${APACHE_PATH}/conf/

echo "Bundling PHP FPM version $PHP_VERSION" | indent
PHP_URL="http://util.cloud.tourbuzz.net.s3.amazonaws.com/heroku/builds/php-${PHP_VERSION}.tgz"
mkdir -p ${PHP_PATH}
(curl --silent --max-time 60 --location "$PHP_URL" || echo FAIL) | tar xz -C ${PHP_PATH}
cp ${BUILDPACK_DIR}/support/php-fpm.conf ${BUILDPACK_DIR}/support/php.ini ${PHP_PATH}/conf/
mkdir -p $BUILD_DIR/run
mkdir -p $BUILD_DIR/fcgi
ln -s /app/www $BUILD_DIR/fcgi/


# Preserve current php-fpm.conf so that env list does
# not go out of hand across restarts.
# From: https://github.com/iphoting/heroku-buildpack-php-tyler/blob/master/bin/compile
# NOT sure this is needed; commenting out for now
#if [ -r ${PHP_PATH}/php-fpm.conf.current ]; then
#  cp -f ${PHP_PATH}/php-fpm.conf.current ${PHP_PATH}/php-fpm.conf
#else
#  cp -f ${PHP_PATH}/etc/php-fpm.conf.default ${PHP_PATH}/php-fpm.conf
#fi

# make php available on bin
mkdir -p bin
ln -s /app/vendor/php/bin/php bin/php

# check if we have Composer dependencies and vendors are not bundled
if [ -f www/composer.json ] && [ ! -d www/vendor ]; then
  (curl --silent --max-time 60 --location "http://util.cloud.tourbuzz.net.s3.amazonaws.com/heroku/builds/subversion-1.7.8.tgz" || echo FAIL) | tar xz -C /app
  GIT_DIR_ORIG=$GIT_DIR
  unset GIT_DIR
  echo "-----> Installing Composer dependencies"
  COMPOSER_URL="http://getcomposer.org/composer.phar"
  curl --fail --silent --max-time 60 --location -o www/composer.phar "$COMPOSER_URL"
  cd www
  ${PHP_PATH}/bin/php composer.phar install --prefer-source
  cd -
  rm www/composer.phar
  export GIT_DIR=$GIT_DIR_ORIG
fi

cp 

# this code needs info from this script, so it's easier to generate it inline here than copy an external template and munge values
cat >>boot.sh <<EOF
# This code runs on every dyno launch
export LD_LIBRARY_PATH=/app/lib:/app/vendor/apache/lib:$LD_LIBRARY_PATH
mkdir -p /app/vendor/var/log

echo "Launching php-fpm"
# Expose Heroku config vars to PHP-FPM processes
# From: https://github.com/iphoting/heroku-buildpack-php-tyler/blob/master/bin/compile
for var in \`env|cut -f1 -d=\`; do
  echo "env[\$var] = \${var}" >> /app/${PHP_PATH}/php-fpm.conf
done
/app/vendor/php/sbin/php-fpm -y /app/vendor/php/php-fpm.conf -c /app/vendor/php/php.ini

echo "Launching apache"
touch /app/vendor/apache/logs/error_log
touch /app/vendor/apache/logs/access_log
tail -F /app/vendor/apache/logs/error_log &
tail -F /app/vendor/apache/logs/access_log &
exec /app/vendor/apache/bin/httpd -d /app/vendor/apache -DNO_DETACH
EOF

chmod +x boot.sh
